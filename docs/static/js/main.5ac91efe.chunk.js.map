{"version":3,"sources":["components/layout/MainNavigation.module.css","components/UI/LoadingSpinner.js","components/layout/Layout.module.css","components/UI/LoadingSpinner.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","store/quoteActions.js","App.js","store/index.js","index.js","store/quote.js"],"names":["module","exports","LoadingSpinner","className","classes","spinner","MainNavigation","header","logo","nav","to","activeClassName","active","Layout","props","main","children","url","isInitial","NewQuote","React","lazy","QuoteDetails","NotFound","AllQuotes","App","useSelector","state","quote","changed","items","dispatch","useDispatch","useEffect","a","fetchData","fetch","response","ok","Error","json","data","quoteActions","startLoadingQuotes","quotesData","replaceQuotes","Swal","fire","message","endLoadingQuotes","quotes","sendData","method","body","JSON","stringify","fallback","path","exact","store","configureStore","reducer","quoteReducer","ReactDOM","render","basename","document","getElementById","quoteSlice","createSlice","name","initialState","isLoading","reducers","action","payload","addQuote","newItem","itemId","id","existingItem","find","item","String","newComment","Math","round","random","text","comment","comments","push","length","author","deleteQuote","newItems","filter","actions"],"mappings":"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","file":"static/js/main.5ac91efe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__9-5uS\",\"logo\":\"MainNavigation_logo__3lmdX\",\"nav\":\"MainNavigation_nav__1YK1H\",\"active\":\"MainNavigation_active__3WZgR\"};","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2YrMH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__TFYC1\"};","import React from \"react\";\nimport classes from \"../layout/MainNavigation.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n  return (\n    <main className={classes.header}>\n      <h2 className={classes.logo}>Graet Quotes</h2>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </main>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react/cjs/react.production.min\";\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => (\n  <Fragment>\n    <MainNavigation />\n    <main className={classes.main}>{props.children}</main>\n  </Fragment>\n);\n\nexport default Layout;\n","import { quoteActions } from \"./quote\";\n\nimport Swal from \"sweetalert2\";\n\nconst url = \"https://react-http-ar-default-rtdb.firebaseio.com/quotes.json\";\n\nexport const sendQuotes = (quotes) => {\n  return async (dispatch) => {\n    const sendData = async () => {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify({ items: quotes }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error getting the data\");\n      }\n    };\n\n    dispatch(quoteActions.startLoadingQuotes());\n\n    try {\n      await sendData();\n    } catch (error) {\n      Swal.fire(\"Ups..\", \"Error: \" + error.message, \"error\");\n    }\n\n    dispatch(quoteActions.endLoadingQuotes());\n  };\n};\n\nexport const getQuotes = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"We have error getting the data! :(\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    dispatch(quoteActions.startLoadingQuotes());\n\n    try {\n      const quotesData = await fetchData();\n\n      dispatch(quoteActions.replaceQuotes({ items: quotesData?.items || [] }));\n    } catch (error) {\n      Swal.fire(\"Error!\", \"Error: \" + error.message, \"error\");\n    }\n\n    dispatch(quoteActions.endLoadingQuotes());\n  };\n};\n","import React, { useEffect, Suspense } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Layout from \"./components/layout/Layout\";\nimport LoadingSpinner from \"./components/UI/LoadingSpinner\";\nimport { sendQuotes, getQuotes } from \"./store/quoteActions\";\n\nlet isInitial = true;\n\nconst NewQuote = React.lazy(() => import(\"./pages/NewQuote\"));\nconst QuoteDetails = React.lazy(() => import(\"./pages/QuoteDetails\"));\nconst NotFound = React.lazy(() => import(\"./pages/NotFound\"));\nconst AllQuotes = React.lazy(() => import(\"./pages/AllQuotes\"));\n\nfunction App() {\n  const { changed, items } = useSelector((state) => state.quote);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getQuotes());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (changed) {\n      dispatch(sendQuotes(items));\n    }\n  }, [dispatch, changed, items]);\n\n  return (\n    <div>\n      <Layout>\n        <Suspense\n          fallback={\n            <div className=\"centered\">\n              <LoadingSpinner />\n            </div>\n          }\n        >\n          <Switch>\n            <Route path=\"/\" exact>\n              <Redirect to=\"/quotes\" />\n            </Route>\n            <Route path=\"/quotes\" exact>\n              <AllQuotes />\n            </Route>\n            <Route path=\"/quotes/:quoteId\">\n              <QuoteDetails />\n            </Route>\n            <Route path=\"/new-quote\">\n              <NewQuote />\n            </Route>\n            <Route path=\"*\">\n              <NotFound />\n            </Route>\n          </Switch>\n        </Suspense>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport quoteReducer from \"./quote\";\n\nconst store = configureStore({ reducer: { quote: quoteReducer } });\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <BrowserRouter basename=\"/greate-quotes-qpp\">\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  changed: false,\n  isLoading: false,\n};\n\nconst quoteSlice = createSlice({\n  name: \"quotes\",\n  initialState,\n  reducers: {\n    startLoadingQuotes(state) {\n      state.isLoading = true;\n    },\n    endLoadingQuotes(state) {\n      state.isLoading = false;\n    },\n    replaceQuotes(state, action) {\n      state.items = action.payload.items;\n    },\n    addQuote(state, action) {\n      const newItem = action.payload;\n      const itemId = newItem?.id;\n\n      state.changed = true;\n\n      if (!itemId) {\n        state.items.push({\n          id:\n            state.items.length > 0\n              ? state.items[state.items.length - 1].id + 1\n              : 1,\n          author: newItem.author,\n          text: newItem.text,\n          comments: [],\n        });\n      } else {\n        const existingItem = state.items.find(\n          (item) => String(item.id) === itemId\n        );\n\n        const newComment = {\n          id: Math.round(Math.random() * 1000),\n          text: newItem.comment,\n        };\n\n        if (existingItem?.comments) {\n          existingItem.comments = [...existingItem.comments, newComment];\n        } else {\n          existingItem.comments = [newComment];\n        }\n      }\n    },\n    deleteQuote(state, action) {\n      const newItems = state.items.filter(\n        (item) => String(item.id) !== action.payload\n      );\n\n      state.changed = true;\n      state.items = newItems;\n    },\n  },\n});\n\nexport const quoteActions = quoteSlice.actions;\n\nexport default quoteSlice.reducer;\n"],"sourceRoot":""}