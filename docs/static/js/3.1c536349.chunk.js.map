{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/hooks/useInput.js","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","useInput","validate","useState","setValue","isTouched","setIsTouched","inputValid","hasError","isValid","reset","onChangeInputHandler","event","target","onBlurInputHandler","module","exports","CommentItem","props","className","classes","item","text","CommentsList","comments","map","comment","id","NewCommentForm","dispatch","useDispatch","params","useParams","commentValue","commentHasError","commentIsValid","commentOnChange","commentOnBlur","formValid","submitFormHandler","preventDefault","quoteActions","addQuote","quoteId","Swal","fire","setIsAddingComment","form","onSubmit","control","htmlFor","rows","onBlur","onChange","actions","Comments","isAddingComment","selectedQuote","useSelector","state","quote","items","find","String","onClick","HighlightedQuote","author","QuoteDetails","match","useRouteMatch","quotes","history","useHistory","isLoading","LoadingSpinner","to","path","exact","title","icon","showCancelButton","showConfirmButton","then","result","isConfirmed","deleteQuote","url"],"mappings":"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","file":"static/js/3.1c536349.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState } from \"react\";\n\nconst useInput = (validate) => {\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const inputValid = validate(value);\n  const hasError = !inputValid && isTouched;\n\n  function onBlurInputHandler() {\n    setIsTouched(true);\n  }\n\n  function onChangeInputHandler(event) {\n    setValue(event.target.value);\n  }\n\n  function reset() {\n    setValue(\"\");\n  }\n\n  return {\n    value,\n    hasError,\n    isValid: inputValid,\n    reset,\n    onChangeInputHandler,\n    onBlurInputHandler,\n  };\n};\n\nexport default useInput;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__17HnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__E6Aje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1Xokh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__27osS\",\"loading\":\"NewCommentForm_loading__3QTH_\",\"control\":\"NewCommentForm_control__1dual\",\"actions\":\"NewCommentForm_actions__fEprS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1_mWv\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { quoteActions } from \"../../store/quote\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useInput from \"../hooks/useInput\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nconst NewCommentForm = (props) => {\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const {\n    value: commentValue,\n    hasError: commentHasError,\n    isValid: commentIsValid,\n    onChangeInputHandler: commentOnChange,\n    onBlurInputHandler: commentOnBlur,\n  } = useInput((value) => value !== \"\");\n\n  let formValid = false;\n\n  if (commentIsValid) {\n    formValid = true;\n  }\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    dispatch(\n      quoteActions.addQuote({ id: params.quoteId, comment: commentValue })\n    );\n\n    Swal.fire(\"Success\", \"Comment created\", \"success\");\n    props.setIsAddingComment(false);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div\n        className={`${classes.control} ${commentHasError ? \"invalid\" : \"\"}`}\n        onSubmit={submitFormHandler}\n      >\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea\n          id=\"comment\"\n          rows=\"5\"\n          value={commentValue}\n          onBlur={commentOnBlur}\n          onChange={commentOnChange}\n        />\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\nimport CommentsList from \"./CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams();\n  const quotes = useSelector((state) => state.quote.items);\n\n  const selectedQuote = quotes.find((quote) => String(quote.id) === quoteId);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm setIsAddingComment={setIsAddingComment} />\n      )}\n\n      {selectedQuote?.comments?.length > 0 ? (\n        <CommentsList comments={selectedQuote?.comments} />\n      ) : (\n        <p>No Comments...</p>\n      )}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\n\nimport classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <Fragment>\n      <figure className={classes.quote}>\n        <p>{props.text}</p>\n        <figcaption>- {props.author}</figcaption>\n      </figure>\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from \"react\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { quoteActions } from \"../store/quote\";\n\nimport Swal from \"sweetalert2\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Route,\n  useParams,\n  useHistory,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const quotes = useSelector((state) => state.quote);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const selectedQuote = quotes.items.find(\n    (quote) => String(quote.id) === params.quoteId\n  );\n\n  if (quotes.isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!selectedQuote) {\n    return <h1 className=\"centered\">No Quote Find</h1>;\n  }\n\n  const deleteHandler = () => {\n    Swal.fire({\n      title: \"Delete quote\",\n      text: \"Are you sure to delete this quote?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      showConfirmButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(quoteActions.deleteQuote(params.quoteId));\n\n        Swal.fire(\"Success\", \"Your quote has deleted\", \"success\");\n\n        history.push(\"/quotes\");\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <Link to=\"/quotes\" className=\"btn btn-outline\">\n        &#8617; Quotes\n      </Link>\n\n      <HighlightedQuote\n        author={selectedQuote?.author}\n        text={selectedQuote?.text}\n      />\n\n      <Route path={match.path} exact>\n        <div className=\"options\">\n          <button onClick={deleteHandler} className=\"btn btn-red\">\n            Delete Quote\n          </button>\n          <Link to={`${match.url}/comments`} className=\"btn btn-comments\">\n            Load comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n"],"sourceRoot":""}