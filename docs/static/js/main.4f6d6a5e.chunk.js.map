{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/comments/Comments.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","store/quote.js","store/quoteActions.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/UI/LoadingSpinner.js","pages/AllQuotes.js","components/UI/Card.js","components/hooks/useInput.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetails.js","pages/NotFound.js","components/layout/MainNavigation.js","components/layout/Layout.js","App.js","store/index.js","index.js"],"names":["module","exports","quoteSlice","createSlice","name","initialState","items","changed","isLoading","reducers","startLoadingQuotes","state","endLoadingQuotes","replaceQuotes","action","payload","addQuote","newItem","itemId","id","existingItem","find","item","String","newComment","Math","round","random","text","comment","comments","push","length","author","deleteQuote","newItems","filter","quoteActions","actions","url","QuoteItem","props","className","classes","to","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","pathname","list","map","quote","NoQuotesFound","noquotes","LoadingSpinner","spinner","AllQuotes","useSelector","Card","card","children","useInput","validate","useState","value","setValue","isTouched","setIsTouched","inputValid","hasError","isValid","reset","onChangeInputHandler","event","target","onBlurInputHandler","QuoteForm","isEntering","setIsEntering","trim","authorValue","authorIsValid","authorHasError","authorOnChange","authorOnBlur","textValue","textIsValid","textHasError","textOnChange","textOnBlur","formIsValid","when","message","onFocus","form","onSubmit","preventDefault","onAddQuote","Swal","fire","loading","control","htmlFor","type","onBlur","onChange","rows","style","resize","NewQuote","dispatch","useDispatch","CommentItem","CommentsList","NewCommentForm","params","useParams","commentValue","commentHasError","commentIsValid","commentOnChange","commentOnBlur","formValid","submitFormHandler","quoteId","setIsAddingComment","Comments","isAddingComment","selectedQuote","HighlightedQuote","QuoteDetails","match","useRouteMatch","path","exact","title","icon","showCancelButton","showConfirmButton","then","result","isConfirmed","NotFound","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","isInitial","App","useEffect","a","fetchData","fetch","response","ok","Error","json","data","quotesData","sendData","method","body","JSON","stringify","store","configureStore","reducer","quoteReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f6d6a5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3V-44\",\"loading\":\"QuoteForm_loading__3Yco7\",\"control\":\"QuoteForm_control__1mdE9\",\"actions\":\"QuoteForm_actions__3azpZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__9-5uS\",\"logo\":\"MainNavigation_logo__3lmdX\",\"nav\":\"MainNavigation_nav__1YK1H\",\"active\":\"MainNavigation_active__3WZgR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__27osS\",\"loading\":\"NewCommentForm_loading__3QTH_\",\"control\":\"NewCommentForm_control__1dual\",\"actions\":\"NewCommentForm_actions__fEprS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3Qp_v\",\"sorting\":\"QuoteList_sorting__394rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1K8hd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__vwy2K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__TFYC1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3fv8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__17HnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__E6Aje\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__1Xokh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1_mWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2YrMH\"};","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  items: [],\n  changed: false,\n  isLoading: false,\n};\n\nconst quoteSlice = createSlice({\n  name: \"quotes\",\n  initialState,\n  reducers: {\n    startLoadingQuotes(state) {\n      state.isLoading = true;\n    },\n    endLoadingQuotes(state) {\n      state.isLoading = false;\n    },\n    replaceQuotes(state, action) {\n      state.items = action.payload.items;\n    },\n    addQuote(state, action) {\n      const newItem = action.payload;\n      const itemId = newItem?.id;\n\n      state.changed = true;\n\n      if (!itemId) {\n        state.items.push({\n          id:\n            state.items.length > 0\n              ? state.items[state.items.length - 1].id + 1\n              : 1,\n          author: newItem.author,\n          text: newItem.text,\n          comments: [],\n        });\n      } else {\n        const existingItem = state.items.find(\n          (item) => String(item.id) === itemId\n        );\n\n        const newComment = {\n          id: Math.round(Math.random() * 1000),\n          text: newItem.comment,\n        };\n\n        if (existingItem?.comments) {\n          existingItem.comments = [...existingItem.comments, newComment];\n        } else {\n          existingItem.comments = [newComment];\n        }\n      }\n    },\n    deleteQuote(state, action) {\n      const newItems = state.items.filter(\n        (item) => String(item.id) !== action.payload\n      );\n\n      state.changed = true;\n      state.items = newItems;\n    },\n  },\n});\n\nexport const quoteActions = quoteSlice.actions;\n\nexport default quoteSlice.reducer;\n","import { quoteActions } from \"./quote\";\n\nimport Swal from \"sweetalert2\";\n\nconst url = \"https://react-http-ar-default-rtdb.firebaseio.com/quotes.json\";\n\nexport const sendQuotes = (quotes) => {\n  return async (dispatch) => {\n    const sendData = async () => {\n      const response = await fetch(url, {\n        method: \"PUT\",\n        body: JSON.stringify({ items: quotes }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Error getting the data\");\n      }\n    };\n\n    dispatch(quoteActions.startLoadingQuotes());\n\n    try {\n      await sendData();\n    } catch (error) {\n      Swal.fire(\"Ups..\", \"Error: \" + error.message, \"error\");\n    }\n\n    dispatch(quoteActions.endLoadingQuotes());\n  };\n};\n\nexport const getQuotes = () => {\n  return async (dispatch) => {\n    const fetchData = async () => {\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(\"We have error getting the data! :(\");\n      }\n\n      const data = await response.json();\n\n      return data;\n    };\n\n    dispatch(quoteActions.startLoadingQuotes());\n\n    try {\n      const quotesData = await fetchData();\n\n      dispatch(quoteActions.replaceQuotes({ items: quotesData?.items || [] }));\n    } catch (error) {\n      Swal.fire(\"Error!\", \"Error: \" + error.message, \"error\");\n    }\n\n    dispatch(quoteActions.endLoadingQuotes());\n  };\n};\n","import classes from \"./QuoteItem.module.css\";\n\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nfunction sortQuotes(quotes, ascending) {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n}\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes([...props.quotes], isSortingAscending);\n\n  function changeSortingHandler() {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  }\n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to=\"new-quote\" className=\"btn\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst AllQuotes = () => {\n  const quotes = useSelector((state) => state.quote);\n\n  if (quotes.isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (quotes.items.length === 0) {\n    return <NoQuotesFound />;\n  }\n\n  return (\n    <Fragment>\n      <QuoteList quotes={quotes.items} />\n    </Fragment>\n  );\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useState } from \"react\";\n\nconst useInput = (validate) => {\n  const [value, setValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const inputValid = validate(value);\n  const hasError = !inputValid && isTouched;\n\n  function onBlurInputHandler() {\n    setIsTouched(true);\n  }\n\n  function onChangeInputHandler(event) {\n    setValue(event.target.value);\n  }\n\n  function reset() {\n    setValue(\"\");\n  }\n\n  return {\n    value,\n    hasError,\n    isValid: inputValid,\n    reset,\n    onChangeInputHandler,\n    onBlurInputHandler,\n  };\n};\n\nexport default useInput;\n","import { Fragment, useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\nimport useInput from \"../hooks/useInput\";\nimport Swal from \"sweetalert2\";\n\nimport { Prompt } from \"react-router-dom\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const {\n    value: authorValue,\n    isValid: authorIsValid,\n    hasError: authorHasError,\n    onChangeInputHandler: authorOnChange,\n    onBlurInputHandler: authorOnBlur,\n  } = useInput((value) => value.trim() !== \"\");\n\n  const {\n    value: textValue,\n    isValid: textIsValid,\n    hasError: textHasError,\n    onChangeInputHandler: textOnChange,\n    onBlurInputHandler: textOnBlur,\n  } = useInput((value) => value.trim() !== \"\");\n\n  let formIsValid = false;\n\n  if (authorIsValid && textIsValid) {\n    formIsValid = true;\n  }\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    if (isEntering) return;\n\n    if (!formIsValid) {\n      textOnBlur();\n      authorOnBlur();\n      Swal.fire(\n        \"Incompleted Information\",\n        \"Your information is incompleted, please complete the form.\",\n        \"warning\"\n      );\n      return;\n    }\n\n    props.onAddQuote({ author: authorValue, text: textValue });\n  }\n\n  function finishEnteringHandler() {\n    setIsEntering(false);\n  }\n\n  function formFocusedHandler() {\n    setIsEntering(true);\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure to leave from this page?, You will lost all information entered\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div\n            className={`${classes.control} ${authorHasError ? \"invalid\" : \"\"}`}\n          >\n            <label htmlFor=\"author\">Author</label>\n            <input\n              id=\"author\"\n              type=\"text\"\n              value={authorValue}\n              onBlur={authorOnBlur}\n              onChange={authorOnChange}\n            />\n            {authorHasError && <p>Author name is not valid*</p>}\n          </div>\n\n          <div\n            className={`${classes.control} ${textHasError ? \"invalid\" : \"\"}`}\n          >\n            <label htmlFor=\"text\">Text</label>\n            <textarea\n              id=\"text\"\n              rows=\"5\"\n              value={textValue}\n              onChange={textOnChange}\n              onBlur={textOnBlur}\n              style={{ resize: \"none\" }}\n            />\n            {textHasError && <p>Text is not valid*</p>}\n          </div>\n\n          <div className={classes.actions}>\n            <button\n              onClick={finishEnteringHandler}\n              type=\"submit\"\n              className=\"btn\"\n            >\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { Fragment } from \"react\";\n\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport { quoteActions } from \"../store/quote\";\n\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router\";\nimport Swal from \"sweetalert2\";\n\nconst NewQuote = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const submitHandler = (quote) => {\n    dispatch(quoteActions.addQuote(quote));\n\n    Swal.fire(\"Succes\", \"Your Quote has created!\", \"success\");\n    history.push(\"/quotes\");\n  };\n\n  return (\n    <Fragment>\n      <QuoteForm onAddQuote={submitHandler} />\n    </Fragment>\n  );\n};\n\nexport default NewQuote;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { quoteActions } from \"../../store/quote\";\nimport classes from \"./NewCommentForm.module.css\";\nimport useInput from \"../hooks/useInput\";\n\nimport { useParams } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport Swal from \"sweetalert2\";\n\nconst NewCommentForm = (props) => {\n  const dispatch = useDispatch();\n  const params = useParams();\n\n  const {\n    value: commentValue,\n    hasError: commentHasError,\n    isValid: commentIsValid,\n    onChangeInputHandler: commentOnChange,\n    onBlurInputHandler: commentOnBlur,\n  } = useInput((value) => value !== \"\");\n\n  let formValid = false;\n\n  if (commentIsValid) {\n    formValid = true;\n  }\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    if (!formValid) {\n      return;\n    }\n\n    dispatch(\n      quoteActions.addQuote({ id: params.quoteId, comment: commentValue })\n    );\n\n    Swal.fire(\"Success\", \"Comment created\", \"success\");\n    props.setIsAddingComment(false);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div\n        className={`${classes.control} ${commentHasError ? \"invalid\" : \"\"}`}\n        onSubmit={submitFormHandler}\n      >\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea\n          id=\"comment\"\n          rows=\"5\"\n          value={commentValue}\n          onBlur={commentOnBlur}\n          onChange={commentOnChange}\n        />\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n\nimport CommentsList from \"./CommentsList\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const { quoteId } = useParams();\n  const quotes = useSelector((state) => state.quote.items);\n\n  const selectedQuote = quotes.find((quote) => String(quote.id) === quoteId);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm setIsAddingComment={setIsAddingComment} />\n      )}\n\n      {selectedQuote?.comments?.length > 0 ? (\n        <CommentsList comments={selectedQuote?.comments} />\n      ) : (\n        <p>No Comments...</p>\n      )}\n    </section>\n  );\n};\n\nexport default Comments;\n","import { Fragment } from \"react\";\n\nimport classes from \"./HighlightedQuote.module.css\";\n\nconst HighlightedQuote = (props) => {\n  return (\n    <Fragment>\n      <figure className={classes.quote}>\n        <p>{props.text}</p>\n        <figcaption>- {props.author}</figcaption>\n      </figure>\n    </Fragment>\n  );\n};\n\nexport default HighlightedQuote;\n","import { Fragment } from \"react\";\n\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { quoteActions } from \"../store/quote\";\n\nimport Swal from \"sweetalert2\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  Route,\n  useParams,\n  useHistory,\n  Link,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst QuoteDetails = () => {\n  const match = useRouteMatch();\n  const params = useParams();\n  const quotes = useSelector((state) => state.quote);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const selectedQuote = quotes.items.find(\n    (quote) => String(quote.id) === params.quoteId\n  );\n\n  if (quotes.isLoading) {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (!selectedQuote) {\n    return <h1 className=\"centered\">No Quote Find</h1>;\n  }\n\n  const deleteHandler = () => {\n    Swal.fire({\n      title: \"Delete quote\",\n      text: \"Are you sure to delete this quote?\",\n      icon: \"warning\",\n      showCancelButton: true,\n      showConfirmButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        dispatch(quoteActions.deleteQuote(params.quoteId));\n\n        Swal.fire(\"Success\", \"Your quote has deleted\", \"success\");\n\n        history.push(\"/quotes\");\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      <Link to=\"/quotes\" className=\"btn btn-outline\">\n        &#8617; Quotes\n      </Link>\n\n      <HighlightedQuote\n        author={selectedQuote?.author}\n        text={selectedQuote?.text}\n      />\n\n      <Route path={match.path} exact>\n        <div className=\"options\">\n          <button onClick={deleteHandler} className=\"btn btn-red\">\n            Delete Quote\n          </button>\n          <Link to={`${match.url}/comments`} className=\"btn btn-comments\">\n            Load comments\n          </Link>\n        </div>\n      </Route>\n\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetails;\n","const NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>Page not Found</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport classes from \"../layout/MainNavigation.module.css\";\n\nimport { NavLink } from \"react-router-dom\";\n\nconst MainNavigation = () => {\n  return (\n    <main className={classes.header}>\n      <h2 className={classes.logo}>Graet Quotes</h2>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </main>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react/cjs/react.production.min\";\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => (\n  <Fragment>\n    <MainNavigation />\n    <main className={classes.main}>{props.children}</main>\n  </Fragment>\n);\n\nexport default Layout;\n","import { useEffect } from \"react\";\nimport { Redirect, Route, Switch } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { sendQuotes, getQuotes } from \"./store/quoteActions\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetails from \"./pages/QuoteDetails\";\nimport NotFound from \"./pages/NotFound\";\nimport Layout from \"./components/layout/Layout\";\n\nlet isInitial = true;\n\nfunction App() {\n  const { changed, items } = useSelector((state) => state.quote);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getQuotes());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    if (changed) {\n      dispatch(sendQuotes(items));\n    }\n  }, [dispatch, changed, items]);\n\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Redirect to=\"/quotes\" />\n          </Route>\n          <Route path=\"/quotes\" exact>\n            <AllQuotes />\n          </Route>\n          <Route path=\"/quotes/:quoteId\">\n            <QuoteDetails />\n          </Route>\n          <Route path=\"/new-quote\">\n            <NewQuote />\n          </Route>\n          <Route path=\"*\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport quoteReducer from \"./quote\";\n\nconst store = configureStore({ reducer: { quote: quoteReducer } });\n\nexport default store;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}